{"remainingRequest":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/docs/course/README.md?vue&type=template&id=1cb58c01&","dependencies":[{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/docs/course/README.md","mtime":1607666521102},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJjb3Vyc2UiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2NvdXJzZSIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIENvdXJzZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZSBjb3Vyc2Ugc2hlbGwgaXMgbWFkZSB1cCBvZiB0aHJlZSBpbXBvcnRhcm50IHBhcnRzOiBjcmVhdG9yIGluZm9ybWF0aW9uLCBjb3Vyc2UgbWVkaWEgKHdlbGNvbWUgdmlkZW8gYW5kIHRodW1ibmFpbCkgYW5kIGNvdXJzZSBzdW1tYXJ5LiBUbyBjcmVhdGUgYSBjb3Vyc2UsIHlvdSB3aWxsIG5lZWQgdG8gcHJvdmlkZSBlYWNoIG9mIHRob3NlIHRocmVlIHBpZWNlcy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJCdXQgZG9uJ3Qgd29ycnksIHRoZSBjcmVhdG9yIGluZm9ybWF0aW9uIGlzIGFscmVhZHkgaW4gdGhlIHN5c3RlbSBhbmQgd2lsbCBiZSBhdXRvZmlsbGVkLiBUaGlzIGxlYXZlcyB5b3Ugd2l0aCBqdXN0IHRoZSBvdGhlciB0d28gcGllY2VzIHdoaWNoIHdlIHdpbGwgd2FsayB5b3VyIHRocm91Z2guIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIlJvbGwgVXAgVGhvc2UgU2xlZXZlcyIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4vdGVub3IuZ2lmIiksIGFsdDogIkFuIGltYWdlIiB9IH0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogIm9wZW4tbmV3LWNvdXJzZS1zaGVsbCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjb3Blbi1uZXctY291cnNlLXNoZWxsIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgT3BlbiBOZXcgQ291cnNlIFNoZWxsIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIkZyb20gdGhlIGhvbWUgcGFnZSwgY2xpY2sgb24gdGhlIGJpZyBhZGQgKCspIGJ1dHRvbi4iKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi9TY3JlZW5zaG90LWZyb20tMzItMzcucG5nIiksCiAgICAgICAgICAgIGFsdDogIkFuIGltYWdlIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogInZlcmlmeS1pbmZvIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiN2ZXJpZnktaW5mbyIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgVmVyaWZ5IEluZm8iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJWZXJpZnkgdGhhdCBhbGwgdGhlIGluZm9ybWF0aW9uIGRpc3BsYXllZCBpcyBjb3JyZWN0LiBJZiBhbnl0aGluZyBpcyB3cm9uZywgZ28gdG8geW91ciB1c2VyIHByb2ZpbGUgYW5kIG1ha2UgdGhlIG5lY2Vzc2FyeSBjaGFuZ2VzLiAoVGhpcyBpc24ndCBwb3NzaWJsZSBhcyBvZiBub3csIGp1c3QgY29udGludWUpIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIkNsaWNrIGNvbnRpbnVlIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4vU2NyZWVuc2hvdC1mcm9tLTU5LTU1LnBuZyIpLAogICAgICAgICAgICBhbHQ6ICJBbiBpbWFnZSIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJjb3Vyc2Utc3VtbWFyeSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjY291cnNlLXN1bW1hcnkiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENvdXJzZSBTdW1tYXJ5IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiRmlsbCBvdXQgdGhlIGNvdXJzZSBzdW1tYXJ5IGluZm9ybWF0aW9uLiBOb3RlIHRoYXQgdGhlIHNob3J0IHN1bW1hcnkgZmllbGQgaXMgbGltaXRlZCB0byA1MDAgY2hhcmFjdGVycywgdGhlIGZpZWxkIGZvbGxvd2luZyBpc24ndCBsaW1pdGVkLiBPbmNlIHlvdSBmaWxsIG91dCBhbGwgdGhlIGZpZWxkcywgY2xpY2sgY29udGludWUuIElmIGFueSBmaWVsZCBpcyBtaXNzaW5nLCBhIHBvcCB1cCB3aWxsIGluZm9ybSB5b3UgdG8gZmluaXNoIHRoaXMgc3RlcCBiZWZvcmUgbW92aW5nLiBDbGljayBvayBhbmQgZmlsbCBvdXQgYWxsIHRoZSBtaXNzaW5nIGZpZWxkcyB0aGVuIGNvbnRpbnVlLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi9TY3JlZW5zaG90LWZyb20tMDEtNTEucG5nIiksCiAgICAgICAgICAgIGFsdDogIkFuIGltYWdlIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImFkZC1tZWRpYSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjYWRkLW1lZGlhIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBBZGQgTWVkaWEiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJhZGQtdGh1bWJuYWlsIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNhZGQtdGh1bWJuYWlsIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBBZGQgVGh1bWJuYWlsIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVXBsb2FkIGFuIGltYWdlIGFuZCBjbGljayBjb250aW51ZS4gSWYgeW91IGNsaWNrIGNvbnRpbnVlIHdpdGhvdXQgdXBsb2FkaW5nIGFuIGltYWdlLCBhIHBvcHVwIHdpbGwgYXNrIHlvdSB0byBjb21wbGV0ZSB0aGlzIHN0ZXAuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiByZXF1aXJlKCIuL1NjcmVlbnNob3QtZnJvbS0wMi0xOC5wbmciKSwKICAgICAgICAgICAgYWx0OiAiQW4gaW1hZ2UiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiYWRkLXdlbGNvbWUtdmlkZW8iIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2FkZC13ZWxjb21lLXZpZGVvIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQWRkIFdlbGNvbWUgVmlkZW8iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJVcGxvYWQgYSB2aWRlbywgYW5kIHdhaXQgZm9yIHZpZGVvIGF0IGxlYXN0IDMwIHNlY29uZHMgZm9yIHZpZGVvIHRvIHVwbG9hZC4gT25jZSByZWFkeSBjbGljayBjb250aW51ZS4gSWYgdGhlIHZpZGVvIGhhc24ndCBjb21wbGV0ZWQgdXBsb2FkaW5nLCBvciB5b3UgaGF2ZW4ndCBzZWxlY3RlZCBhIHZpZGVvLCBhIHBvcHVwIHdpbGwgb25jZSBhZ2FpbiBhc2sgeW91IHRvIGNvbXBsZXRlIHRoaXMgc3RlcCBiZWZvcmUgbW92aW5nIG9uLiBPbmNlIHlvdXIgc2NyZWVuIGxvb2tzIGxpa2UgdGhlIHNjcmVlbnNob3QgYmVsb3csIHlvdSBhcmUgcmVhZHkgdG8gY2xpY2sgQ3JlYXRlIENvdXJzZSIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIk9uY2UgdGhlIGNvdXJzZSBjcmVhdGVzLCB5b3UnbGwgYmUgdGFrZW4gdG8geW91ciBuZXcgY291cnNlIGFuZCB5b3UgYXJlIHJlYWR5IHRvIGJlZ2luIGNyZWF0aW5nIGNvbnRlbnQuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAibmV3LWNvdXJzZSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbmV3LWNvdXJzZSIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgTmV3IENvdXJzZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIk9uY2UgdGhlIGNvdXJzZSBmaW5pc2hlcyBjcmVhdGluZywgdGhlIG5ldyBjb3Vyc2Ugb3BlbnMuIFlvdSBub3cgaGF2ZSBhIGJsYW5rIGNhbnZhcyBmb3IgeW91ciB0byBjcmVhdGUgYSBuZXcgd29ybGQiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4vU2NyZWVuc2hvdC1mcm9tLTA1LTAxLnBuZyIpLAogICAgICAgICAgICBhbHQ6ICJBbiBpbWFnZSIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}