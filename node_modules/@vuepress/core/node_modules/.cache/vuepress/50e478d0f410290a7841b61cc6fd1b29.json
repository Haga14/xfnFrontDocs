{"remainingRequest":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/docs/getting-started/README.md?vue&type=template&id=21c0c7b4&","dependencies":[{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/docs/getting-started/README.md","mtime":1607708971324},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/ibra/Documents/Workspace/XiinFiniin/XF/front/XFStudio/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoiaW50cm8ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNpbnRybyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBJbnRybyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkJlZm9yZSB5b3Ugc3RhcnQgY3JlYXRpbmcgY29udGVudCBpbiBTdHVkaW8sIGl0J3MgaW1wb3J0YW50IHlvdSB1bmRlcnN0YW5kIGl0J3MgdGhlIGNvbnRlbnQgaGllcmFyY2h5LiBJbiB0aGlzIHBhZ2UsIHdlIHdpbGwgZXhwbGFpbiB0aGUgdmFyaW91cyBsZWFybmluZyBjb250ZW50IHR5cGVzIGFuZCB0aGVpciBjb21wcG9uZW50IHBhcnRzLiBXZSB3aWxsIG5vdCB0b3VjaCBvbiBob3cgdG8gY3JlYXRlIHRob3NlIGNvbnRlbnQgdHlwZXMgaGVyZSwgaW5zdGVhZCB3ZSB3aWxsIHByb3ZpZGUgYW4gaW50cm9kdWN0aW9uIHRoYXQgZ2l2ZXMgeW91IGEgYmFzaWMgdW5kZXJzdGFuZGluZyBvZiB0aGUgY29udGVudCB0eXBlcyBhbmQgaG93IHRoZXkgcmVsYXRlIHRvIGVhY2ggb3RoZXIuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSWYgeW91IGFyZSBsb29raW5nIGZvciBhIGhvdyB0byBjcmVhdGUgZ3VpZGUsIGNsaWNrIG9uIHRoZSByZWxldmFudCBzZWN0aW9uIGluIHRoZSBzaWRlYmFyIGJlbG93IGNyZWF0aW5nIGNvbnRlbnQuIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiY291cnNlIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY291cnNlIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIENvdXJzZSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBkaWFncmFtIGJlbG93IGxheXMgb3V0IHRoZSBjb250ZW50IGhpZXJhcmNoeSBhbmQgYnkgZXh0ZW5zaW9uIHRoZSBcImNyZWF0aW9uIGZsb3dcIi4gSS5lIHlvdSB3aWxsIG5vdCBiZSBhYmxlIHRvIGNyZWF0ZSBhIGxlc3NvbiBiZWZvcmUgeW91IGNyZWF0ZSBhIHNlY3Rpb24uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiLi9mbG93MS5wbmciKSwiYWx0IjoiQW4gaW1hZ2UifX0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIk5vdGljZToiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiRWFjaCBsZXZlbCBvZiB0aGUgaGllcmFyY2h5IGlzIGJvdGggdmlkZW8gYW5kIHRleHQgY2FwYWJsZSBhdCB0aGUgc2FtZSB0aW1lIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIllvdSBjYW4gb3B0IGZvciBhIGZ1bGwgdmlkZW8gY291cnNlLCBvciBhIG1peGVkIGNvdXJzZSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJUaGUgYXNzaWdubWVudCBoaWVyYXJjaHkgY29udGFpbnMgYSBudW1iZXIgb2Ygc3ViLWNvbXBvbmVudHMgc3VjaCBhcyBkaXNjdXNzaW9ucyBhbmQgcXVpemVzIildKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJhc3NpZ25tZW50cyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2Fzc2lnbm1lbnRzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEFzc2lnbm1lbnRzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiT2YgYWxsIHRoZSBjb250ZW50IHR5cGVzLCBhc3NpZ25tZW50cyBhcmUgdGhlIG1vc3QgY29tcGxleC4gSW4gdGhlIGZvbGxvd2luZyBzZWN0aW9ucyB3ZSB3aWxsIGJyZWFrIGl0IGRvd24gaW50byBpdCdzIGNvbXBvbmVudCBwYXJ0cy4gT25jZSB5b3UgdW5kZXJzdGFuZCBob3cgYXNzaWdubWVudHMgd29yaywgeW91IGNhbiBzdGFydCBjcmVhdGluZyBhc3NpZ25tZW50cy4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJhc3NpZ25tZW50LXR5cGVzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjYXNzaWdubWVudC10eXBlcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBBc3NpZ25tZW50IFR5cGVzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiQXNzaWdubWVudHMgY2FuIGJlIGVpdGhlciBhIGRpc2N1c3Npb24gb3IgYSBRU2V0LiIpXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6ImRpc2N1c3Npb24tdHlwZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2Rpc2N1c3Npb24tdHlwZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBEaXNjdXNzaW9uIFR5cGUiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBIGRpc2N1c3Npb24gYXNzaWdubWVudCBpcyBhIGZvcnVtIHByb21wdC4gVGhlIGluc3RydWN0b3IgcG9zZXMgYSBxdWVzdGlvbiBhbmQgZXZlcnkgc3R1ZGVudCBpcyByZXF1aXJlZCB0byByZXNwb25kLiBTdHVkZW50cyBjYW4gdGhlbiBmdXJ0aGVyIHJlc3BvbmQgdG8gZWFjaCBvdGhlciBqdXN0IGFzIGluIGEgZm9ydW0uIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoicXNldC10eXBlIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjcXNldC10eXBlIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFFTZXQgVHlwZSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkEgUVNldCAtIHNob3J0IGZvciBxdWVzdGlvbiBzZXQgLSBhc3NpZ25tZW50IGlzIGFuIGFzc2lnbm1lbnQgdGhhdCBwb3NlcyBhIG51bWJlciBvZiBxdWVzdGlvbnMgdG8gYSBzdHVkZW50LiBUaGUgaW5zdHJ1Y3RvciB0aGVuIGRldGVybWluZXMgdGhlIHN1Ym1pc3Npb24gdHlwZSBvZiB0aGUgYXNzaWdubWVudCBhczogaW5wdXQsIGF0dGFjaG1lbnQgb3Igb3B0aW9uYWwuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoic3VibWlzc2lvbi10eXBlcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3N1Ym1pc3Npb24tdHlwZXMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU3VibWlzc2lvbiBUeXBlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBzdWJtaXNzaW9uIHR5cGUgZGV0ZXJtaW5lcyBob3cgdGhlIHN0dWRlbnQgcmVzcG9uZHMgdG8gYW4gYXNzaWdubWVudCBvZiBRU2V0IFR5cGUuIFRoZSB2YXJpb3VzIHR5cGVzIGFyZSBkaXNjdXNzZWQgYmVsb3cuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiaW5wdXQtdHlwZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2lucHV0LXR5cGUifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgSW5wdXQgVHlwZSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkEgc3VibWlzc2lvbiBvZiB0eXBlIGlucHV0IHJlcXVpcmVzIHRoZSB1c2VyIHRvIGRpcmVjdGx5IGVudGVyIHRoZWlyIGFuc3dlcnMgaW4gYXNzaWdubWVudCBwYWdlLiBFYWNoIHF1ZXN0aW9uIGluIHRoZSBhc3NpZ25tZW50IHdpbGwgaGF2ZSBhIHVzZXIgaW5wdXQgZmllbGQgZGVwZW5kaW5nIG9uIHRoZSBxdWVzdGlvbiB0eXBlLCB3aGljaCB3aWxsIGJlIGRpc2N1c3NlZCBpbiB0aGUgbmV4dCBzZWN0aW9uLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6InF1ZXN0aW9uLXR5cGVzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjcXVlc3Rpb24tdHlwZXMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgUXVlc3Rpb24gVHlwZXMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJFYWNoIHF1ZXN0aW9uIGluIGEgcXVlc3Rpb24gc2V0IHdpbGwgaGF2ZSBiZSBoYXZlIGEgdHlwZSBhc3NpZ25lZCB0byBpdC4gVGhpcyB0eXBlIHdpbGwgZGV0ZXJtaW5lIGhvdyB0aGUgc3R1ZGVudCBpbnRlcmFjdHMgd2l0aCB0aGUgcXVlc3Rpb24uIFRob3NlIHR5cGVzIGFyZSBsaXN0ZWQgYmVsb3cuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoibXVsdGlwbGUtY2hvaWNlLW9uZS1jb3JyZWN0In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbXVsdGlwbGUtY2hvaWNlLW9uZS1jb3JyZWN0In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIE11bHRpcGxlIGNob2ljZSwgb25lIGNvcnJlY3QiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUaGlzIHR5cGUgb2YgcXVlc3Rpb24gaXMgYSBtdWx0aXBsZSBxdWVzdGlvbiB3aXRoIG9uZSBjb3JyZWN0IGFuc3dlci4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJtdWx0aXBsZS1jaG9pY2UtbXVsdGlwbGUtY29ycmVjdCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI211bHRpcGxlLWNob2ljZS1tdWx0aXBsZS1jb3JyZWN0In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIE11bHRpcGxlIGNob2ljZSwgbXVsdGlwbGUgY29ycmVjdCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoaXMgdHlwZSBvZiBxdWVzdGlvbiBpcyBhIG11bHRpcGxlIHR5cGUgcXVlc3Rpb24gd2l0aCBtdWx0aXBsZSBjb3JyZWN0IGFuc3dlcnMuIFRoZXJlIGlzbid0IGEgbGltaXQgdG8gdGhlIG51bWJlciBvZiBjb3JyZWN0IGFuc3dlcnMgaGVyZS4gQWxsIGFuc3dlcnMgY291bGQgYmUgY29ycmVjdCBvciBqdXN0IG9uZSBjb3VsZCBiZSBjb3JyZWN0LiBZb3UgZGVjaWRlLiIpXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6ImVzc2F5In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZXNzYXkifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgRXNzYXkiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBbiBlc3NheSBxdWVzdGlvbiB3aWxsIGdpdmUgdGhlIHVzZXIgYSBmdWxseSBmZWF0dXJlZCB0ZXh0IGVkaXRvciB3aGVyZSB0aGV5IGNhbiBjb21wb3NlIHRoZWlyIHJlc29uc2UgZXNzYXkuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoibWF0aCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI21hdGgifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgTWF0aCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkEgbWF0aCBxdWVzdGlvbiB0eXBlIHdpbGwgZ2l2ZSB0aGUgdXNlciBhbiBpbnB1dCBmaWVsZCBvcHRpbWl6ZWQgZm9yIG1hdGggdG8gY29tcG9zZSB0aGVpciBhbnN3ZXIuIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoicmVzb3VyY2VzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjcmVzb3VyY2VzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFJlc291cmNlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlJlc291cmNlcyBhcmUgbm90IGluY2x1ZGVkIGluIHRoZSBhYm92ZSBkaWFncmFtLCBidXQgdGhleSBmYWxsIHVuZGVyIHRoZSBjb3Vyc2UgaGllcmFyY2h5LiBNZWFuaW5nLCBvbmNlIHlvdSBjcmVhdGUgYSBjb3Vyc2UgeW91IGNhbiBpbW1pZGlhdGVseSBjcmVhdGVkIHJlc291cmNlcy4gUmVzb3VyY2VzIGNhbiBiZSBjcmVhdGVkIGJ5IGJvdGggc3R1ZGVudHMgYW5kIGluc3RydWN0b3JzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkEgcmVzb3VyY2UgY2FuIGJlIGEgZmlsZSBkaXJlY3RseSB1cGxvYWRlZCB0byB0aGUgY291cnNlLCBvciBhIGxpbmsgdG8gYW4gZXh0ZXJuYWwgcmVzb3VyY2Ugc3VjaCBhcyBhIFlvdVR1YmUgdmlkZW8gb3IgYSBuZXcgYXJ0aWNsZSIpXSldKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}